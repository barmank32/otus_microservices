stages:
  - test
  - build
  - deploy

variables:
  DOCKER_REGISTRY: cr.yandex/crpjnlko70d33tt15jvt
  
.docker_login:
  image: docker:18.09
  services:
    - docker:18.09-dind
  before_script:
    - docker login --username oauth --password $OAuth_yandex cr.yandex

build_bot:
  extends: .docker_login
  stage: build
  script:
    - echo 'Building docker image crawler'
    - docker info
    - docker build -t $DOCKER_REGISTRY/crawler:$CI_COMMIT_SHORT_SHA docker/crawler
    - docker push $DOCKER_REGISTRY/crawler:$CI_COMMIT_SHORT_SHA

build_ui:
  extends: .docker_login
  stage: build
  script:
    - echo 'Building docker image crawler_ui'
    - docker info
    - docker build -t $DOCKER_REGISTRY/crawler_ui:$CI_COMMIT_SHORT_SHA docker/ui
    - docker push $DOCKER_REGISTRY/crawler_ui:$CI_COMMIT_SHORT_SHA

test_bot:
  stage: test
  image: python:3.6.0-alpine
  services:
    - rabbitmq:3-management-alpine
  variables:
    RMQ_HOST: rabbitmq
    RMQ_QUEUE: 5672
    RMQ_USERNAME: guest
    RMQ_PASSWORD: guest
  script:
    - apk --no-cache --update add git
    - git clone https://github.com/express42/search_engine_crawler.git /app
    - pip install -r /app/requirements.txt -r /app/requirements-test.txt
    - cd /app
    - python -m unittest discover -s tests/
    - coverage run -m unittest discover -s tests/
    - coverage report --include crawler/crawler.py

test_ui:
  stage: test
  image: python:3.6.0-alpine
  script:
    - apk --no-cache --update add git
    - git clone https://github.com/express42/search_engine_ui.git /app
    - pip install -r /app/requirements.txt -r /app/requirements-test.txt
    - cd /app
    - python -m unittest discover -s tests/
    - coverage run -m unittest discover -s tests/
    - coverage report --include ui/ui.py

deploy_bot:
  stage: deploy
  script:
    - echo 'deploy Crawler'

deploy_ui:
  stage: deploy
  script:
    - echo 'deploy UI'
    